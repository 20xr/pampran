{
  "Conditions":{
    "NotificationCondition":{"Fn::Not":[{"Fn::Equals":[{"Ref":"NotificationEmailAddress"},"none"]}]},
    "UseSSLCondition":{"Fn::Not":[{"Fn::Equals":[{"Ref":"SSLCertificateId"},"none"]}]}
  },
  "Parameters":{
    "AsgDesiredCapacity":{"Type":"Number","Default":"1"},
    "AsgMaxSize":{"Type":"Number","Default":"1"},
    "AsgMinSize":{"Type":"Number","Default":"1"},
    "CacheClusterName":{"Type":"String","Default":"AppCluster"},
    "CacheClusterSize":{"Type":"Number","Default":"1"},
    "CacheNodeType":{"Description":"Redis nodes instance type","Type":"String","Default":"cache.t2.small"},
    "DBAllocatedStorage":{"Description":"GB storage for database","Type":"Number","Default":5},
    "DBBackupRetentionPeriod":{"Description":"DB snapshot retention in days","Type":"Number","Default":30},
    "DBInstanceClass":{"Description":"RDS instance type","Type":"String","Default":"db.t2.small"},
    "DBName":{"Type":"String","Default":"AppDB"},
    "DBPassword":{"Type":"String","NoEcho":"true","Default":"password"},
    "DBPort":{"Type":"Number","Default":3306},
    "DBSnapshotIdentifier":{"Description":"Snapshot from which to create DB","Type":"String","Default":""},
    "DBUsername":{"Type":"String","Default":"DBUser"},
    "DomainName":{"Type":"String"},
    "ImageId":{"Description":"AMI ID for LaunchConfiguration","Type":"String"},
    "NotificationEmailAddress":{"Type":"String","Default":"none"},
    "RedisPort":{"Description":"Redis port","Type":"Number","Default":"6379"},
    "ServerInstanceMonitoring":{"Type":"String","Default":"false"},
    "ServerInstanceType":{"Type":"String","Default":"t2.small"},
    "ServerPort":{"Type":"Number","Default":"3000"},
    "SshKeyName":{"Type":"String","Default":"app1"},
    "SSLCertificateId":{"Type":"String","Default":"none"},
    "VpcIpBlock":{"Description":"CIDR block for VPC","Type":"String","Default":"10.100.128.0/18"}
  },
  "Resources":{
    "AppLaunchConfiguration":{
      "Type":"AWS::AutoScaling::LaunchConfiguration",
      "Properties":{
        "AssociatePublicIpAddress":true,
        "IamInstanceProfile":{"Fn::GetAtt":["ServerInstanceProfile","Arn"]},
        "ImageId":{"Ref":"ImageId"},
        "InstanceMonitoring":{"Ref":"ServerInstanceMonitoring"},
        "InstanceType":{"Ref":"ServerInstanceType"},
        "KeyName":{"Ref":"SshKeyName"},
        "SecurityGroups":[{"Ref":"ServerSecurityGroup"}],
        "UserData":{"Fn::Base64":{"Fn::Join":[
          "",
          [
            "CACHE_CLUSTER=",
            {"Ref":"CacheCluster"},
            "\n",
            "DB_HOST=",
            {"Fn::GetAtt":["Database","Endpoint.Address"]},
            "\n",
            "DB_PORT=",
            {"Fn::GetAtt":["Database","Endpoint.Port"]},
            "\n",
            "DB_USER=",
            {"Ref":"DBUsername"},
            "\n",
            "DB_PASSWORD=",
            {"Ref":"DBPassword"},
            "\n",
            "DB_NAME=appdb",
            "\n"
          ]
        ]}}
      }
    },
    "ASGroup":{
      "Type":"AWS::AutoScaling::AutoScalingGroup",
      "Properties":{
        "AvailabilityZones":{"Fn::GetAZs":{"Ref":"AWS::Region"}},
        "Cooldown":"60",
        "DesiredCapacity":{"Ref":"AsgDesiredCapacity"},
        "HealthCheckGracePeriod":"30",
        "HealthCheckType":"ELB",
        "LaunchConfigurationName":{"Ref":"AppLaunchConfiguration"},
        "LoadBalancerNames":[{"Ref":"ElbResource"}],
        "MaxSize":{"Ref":"AsgMaxSize"},
        "MinSize":{"Ref":"AsgMinSize"},
        "NotificationConfigurations":{"Fn::If":[
          "NotificationCondition",
          {
            "NotificationTypes":[
              "autoscaling:EC2_INSTANCE_LAUNCH",
              "autoscaling:EC2_INSTANCE_LAUNCH_ERROR",
              "autoscaling:EC2_INSTANCE_TERMINATE",
              "autoscaling:EC2_INSTANCE_TERMINATE_ERROR",
              "autoscaling:TEST_NOTIFICATION"
            ],
            "TopicARN":{"Ref":"NotificationTopic"}
          },
          {"Ref":"AWS::NoValue"}
        ]},
        "Tags":[{"Key":"Name","Value":"NodeServer","PropagateAtLaunch":true}],
        "VPCZoneIdentifier":{"Fn::Join":[",",[{"Ref":"Subnet1"},{"Ref":"Subnet2"},{"Ref":"Subnet3"}]]}
      }
    },
    "ASGroupScaleUpPolicy":{
      "Type":"AWS::AutoScaling::ScalingPolicy",
      "Properties":{"AdjustmentType":"ChangeInCapacity","AutoScalingGroupName":{"Ref":"ASGroup"},"Cooldown":"60","ScalingAdjustment":"1"}
    },
    "CacheCluster":{
      "Type":"AWS::ElastiCache::CacheCluster",
      "Properties":{
        "CacheNodeType":{"Ref":"CacheNodeType"},
        "CacheSubnetGroupName":{"Ref":"CacheSubnetGroup"},
        "ClusterName":{"Fn::Join":["-",[{"Ref":"CacheClusterName"},{"Ref":"AWS::StackName"}]]},
        "Engine":"redis",
        "NumCacheNodes":{"Ref":"CacheClusterSize"},
        "Port":{"Ref":"RedisPort"},
        "VpcSecurityGroupIds":[{"Fn::GetAtt":["CacheSecurityGroup","GroupId"]}]
      }
    },
    "CacheSecurityGroup":{
      "Type":"AWS::EC2::SecurityGroup",
      "Properties":{
        "GroupDescription":"CacheSecurityGroup",
        "SecurityGroupIngress":[{"IpProtocol":"tcp","FromPort":{"Ref":"CacheNodePort"},"ToPort":{"Ref":"CacheNodePort"},"CidrIp":{"Ref":"VpcIpBlock"}}],
        "VpcId":{"Ref":"Vpc"}
      }
    },
    "CacheSubnetGroup":{
      "Type":"AWS::ElastiCache::SubnetGroup",
      "Properties":{"SubnetIds":[{"Ref":"Subnet1"},{"Ref":"Subnet3"},{"Ref":"Subnet3"}]}
    },
    "Database":{
      "Type":"AWS::RDS::DBInstance",
      "Properties":{
        "AllocatedStorage":{"Ref":"DBAllocatedStorage"},
        "AvailabilityZone": {"Fn::Select" : [1, {"Fn::GetAZs":""}]},
        "BackupRetentionPeriod":{"Ref":"DBBackupRetentionPeriod"},
        "DBInstanceClass":{"Ref":"DBInstanceClass"},
        "DBInstanceIdentifier":{"Fn::Join":["-",["Armor",{"Ref":"AWS::StackName"}]]},
        "DBName":{"Ref":"DBName"},
        "DBSnapshotIdentifier":{"Ref":"DBSnapshotIdentifier"},
        "DBSubnetGroupName":{"Ref":"DatabaseSubnetGroup"},
        "Engine":"mysql",
        "MasterUsername":{"Ref":"DBUsername"},
        "MasterUserPassword":{"Ref":"DBPassword"},
        "Port":{"Ref":"DBPort"},
        "VPCSecurityGroups":[{"Ref":"DatabaseSecurityGroup"}]
      }
    },
    "DatabaseSecurityGroup":{
      "Type":"AWS::EC2::SecurityGroup",
      "Properties":{
        "GroupDescription":"DatabaseSecurityGroup",
        "SecurityGroupIngress":[
          {"IpProtocol":"tcp","FromPort":{"Ref":"DBPort"},"ToPort":{"Ref":"DBPort"},"CidrIp":{"Ref":"VpcIpBlock"}}
        ],
        "VpcId":{"Ref":"Vpc"}
      }
    },
    "DatabaseSubnetGroup":{
      "Type":"AWS::RDS::DBSubnetGroup",
      "Properties":{"DBSubnetGroupDescription":"SubnetGroupforthedatabase","SubnetIds":[{"Ref":"Subnet1"},{"Ref":"Subnet2"},{"Ref":"Subnet3"}]}
    },
    "ElbCname":{
      "Type":"AWS::Route53::RecordSet",
      "Properties":{
        "Type":"CNAME",
        "HostedZoneName":"armor.kixeye.com.",
        "Name":{"Fn::Join":[".",[{"Ref":"AWS::StackName"},{"Ref":"DomainName"}]]},
        "ResourceRecords":[{"Fn::GetAtt":["ElbResource","DNSName"]}],
        "TTL":"900"
      }
    },
    "ElbResource":{
      "Type":"AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties":{
        "CrossZone":true,
        "HealthCheck":{
          "HealthyThreshold":2,
          "Interval":10,
          "Target":{"Fn::Join":["","HTTP:",{"Ref":"ServerPort"},"/healthcheck"]},
          "Timeout":5,
          "UnhealthyThreshold":2
        },
        "Listeners":[
          {"Fn::If":[
            "UseSSLCondition",
            {
              "InstancePort":{"Ref":"ServerPort"},
              "InstanceProtocol":"http",
              "LoadBalancerPort":443,
              "Protocol":"https",
              "SSLCertificateId":{"Ref":"SSLCertificateId"}
            },
            {"LoadBalancerPort":80,"Protocol":"http","InstancePort":{"Ref":"ServerPort"},"InstanceProtocol":"http"}
          ]}
        ],
        "Subnets":{"Fn::Join":[",",[{"Ref":"Subnet1"},{"Ref":"Subnet2"},{"Ref":"Subnet3"}]]},
        "SecurityGroups":[{"Ref":"ElbSecurityGroup"}]
      }
    },
    "ElbSecurityGroup":{
      "Type":"AWS::EC2::SecurityGroup",
      "Properties":{
        "GroupDescription":"ElbSecurityGroup",
        "SecurityGroupIngress":[
          {"IpProtocol":"tcp","FromPort":"80","ToPort":"80","CidrIp":"0.0.0.0/0"},
          {"IpProtocol":"tcp","FromPort":"443","ToPort":"443","CidrIp":"0.0.0.0/0"}
        ],
        "Tags":[{"Key":"Name","Value":{"Fn::Join":["",["ELB (",{"Ref":"AWS::StackName"},")"]]}}],
        "VpcId":{"Ref":"Vpc"}
      }
    },
    "InternetGateway":{"Type":"AWS::EC2::InternetGateway","Properties":{"Tags":[{"Key":"Name","Value":{"Ref":"AWS::StackName"}}]}},
    "InternetGatewayAttachment":{"Type":"AWS::EC2::VPCGatewayAttachment","Properties":{"InternetGatewayId":{"Ref":"InternetGateway"},"VpcId":{"Ref":"Vpc"}}},
    "NotificationTopic":{
      "Type":"AWS::SNS::Topic",
      "Properties":{
        "DisplayName":{"Fn::Join":[" ",["AWS event from environment",{"Ref":"AWS::StackName"}]]},
        "Subscription":[{"Protocol":"email","Endpoint":{"Ref":"NotificationEmailAddress"}}],
        "TopicName":{"Fn::Join":["-",[{"Ref":"AWS::StackName"},"notifications"]]}
      }
    },
    "Route":{
      "Type":"AWS::EC2::Route",
      "DependsOn":"InternetGateway",
      "Properties":{"RouteTableId":{"Ref":"RouteTable"},"DestinationCidrBlock":"0.0.0.0/0","GatewayId":{"Ref":"InternetGateway"}}
    },
    "RouteTable":{"Type":"AWS::EC2::RouteTable","Properties":{"VpcId":{"Ref":"Vpc"},"Tags":[{"Key":"Name","Value":{"Ref":"AWS::StackName"}}]}},
    "S3Bucket":{
      "Type":"AWS::S3::Bucket",
      "DeletionPolicy":"Retain",
      "Properties":{"AccessControl":"Private","BucketName":{"Fn::Join":[".",[{"Ref":"AWS::StackName"},{"Ref":"DomainName"}]]}}
    },
    "ServerInstanceProfile":{"Type":"AWS::IAM::InstanceProfile","Properties":{"Path":"/","Roles":[{"Ref":"ServerRole"}]},"DependsOn":"ServerRole"},
    "ServerRole":{
      "Type":"AWS::IAM::Role",
      "Properties":{
        "AssumeRolePolicyDocument":{
          "Statement":[{"Sid":"","Effect":"Allow","Principal":{"Service":"ec2.amazonaws.com"},"Action":"sts:AssumeRole"}],
          "Version":"2012-10-17"
        },
        "Path":"/",
        "Policies":[
          {
            "PolicyDocument":{"Version":"2012-10-17","Statement":[{"Effect":"Allow","Action":"*","Resource":"*"}]},
            "PolicyName":"PermissionsPolicy"
          }
        ]
      }
    },
    "ServerSecurityGroup":{
      "Type":"AWS::EC2::SecurityGroup",
      "Properties":{
        "GroupDescription":"NodeServerSecurityGroup",
        "SecurityGroupIngress":[{"IpProtocol":"tcp","FromPort":"22","ToPort":"22","CidrIp":"0.0.0.0/29"}],
        "Tags":[{"Key":"Name","Value":{"Fn::Join":["",["GarageService (",{"Ref":"AWS::StackName"},")"]]}}],
        "VpcId":{"Ref":"Vpc"}
      }
    },
    "Subnet1":{
      "Type":"AWS::EC2::Subnet",
      "Properties":{
        "AvailabilityZone":{"Fn::Select":["0",{"Fn::GetAZs":{"Ref":"AWS::Region"}}]},
        "CidrBlock":"10.100.128.31/27",
        "Tags":[
          {
            "Key":"Name",
            "Value":{"Fn::Join":["",[{"Ref":"AWS::StackName"}," (",{"Fn::Select":["0",{"Fn::GetAZs":{"Ref":"AWS::Region"}}]},")"]]}
          }
        ],
        "VpcId":{"Ref":"Vpc"}
      }
    },
    "Subnet1RouteTableAssociation":{"Type":"AWS::EC2::SubnetRouteTableAssociation","Properties":{"RouteTableId":{"Ref":"RouteTable"},"SubnetId":{"Ref":"Subnet1"}}},
    "Subnet2":{
      "Type":"AWS::EC2::Subnet",
      "Properties":{
        "AvailabilityZone":{"Fn::Select":["1",{"Fn::GetAZs":{"Ref":"AWS::Region"}}]},
        "CidrBlock":"10.100.128.63/27",
        "Tags":[
          {
            "Key":"Name",
            "Value":{"Fn::Join":["",[{"Ref":"AWS::StackName"}," (",{"Fn::Select":["1",{"Fn::GetAZs":{"Ref":"AWS::Region"}}]},")"]]}
          }
        ],
        "VpcId":{"Ref":"Vpc"}
      }
    },
    "Subnet2RouteTableAssociation":{"Type":"AWS::EC2::SubnetRouteTableAssociation","Properties":{"RouteTableId":{"Ref":"RouteTable"},"SubnetId":{"Ref":"Subnet2"}}},
    "Subnet3":{
      "Type":"AWS::EC2::Subnet",
      "Properties":{
        "AvailabilityZone":{"Fn::Select":["2",{"Fn::GetAZs":{"Ref":"AWS::Region"}}]},
        "CidrBlock":"10.100.128.95/27",
        "Tags":[
          {
            "Key":"Name",
            "Value":{"Fn::Join":["",[{"Ref":"AWS::StackName"}," (",{"Fn::Select":["2",{"Fn::GetAZs":""}]},")"]]}
          }
        ],
        "VpcId":{"Ref":"Vpc"}
      }
    },
    "Subnet3RouteTableAssociation":{"Type":"AWS::EC2::SubnetRouteTableAssociation","Properties":{"RouteTableId":{"Ref":"RouteTable"},"SubnetId":{"Ref":"Subnet3"}}},
    "Vpc":{
      "Type":"AWS::EC2::VPC",
      "Properties":{
        "CidrBlock":{"Ref":"VpcIpBlock"},
        "EnableDnsHostnames":true,
        "EnableDnsSupport":true,
        "InstanceTenancy":"default",
        "Tags":[{"Key":"Name","Value":{"Ref":"AWS::StackName"}}]
      }
    }
  }
}
